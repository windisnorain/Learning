## 常见常用的linux命令
### 文件处理命令
#### 查看路径下文件	
ls  -a显示所有文件，包含隐藏; -l显示详细; -d查看目录的属性;	-h人性化大小显示
>	ls  -l时前面字母的意义：
> - -文件,l软连接,d目录
> -	所有者权限user，所属组权限group，其他者权限other
> -	r:read=4; 	w:write=2;	x:execute=1
#### 创建与删除
mkdir/rmdir/touch/mv/ln/cp/rm
> - ln -s [原文件] [目标文件]创建软连接（快接方式）, 不加s为硬链接
> - cp -r复制目录; -p保留文件属性
> - rm -r删除目录; -f强制执行
#### 查看文件内容
cat/tac/more/less/head/tail
> - cat -n显示行号
> - tac 反向显示cat
> - more 分页显示文件
> - less 分页显示，可向上翻页
> - head/tail -数字 显示文件前或后多少行
> - tail -f 动态显示文件末尾内容， 监控日志命令
### 权限管理命令
- chmod -R 递归修改 修改权限
- chown 修改所有者，只有root可改
- chgrp 修改文件所属组，只有root可改
- umask 查看新建文件或目录的默认权限
### 用户管理命令
- useradd/groupadd
- passwd
- who/w (tty本地用户/pts远程用户)
- uptime服务器运行时间
### 文件搜索命令
find [范围] [选项] [匹配条件]
> - -name 文件名查找; -iname 不区分大小写
> - -size +-n 大于或小于n的文件
> -	-user 文件所有者; -group 所属组
> -	-cmin -5 5分钟内被修改过属性的文件或目录
> -	-amin -5 5分钟内被访问过的
> -	-mmin -5 5分钟内文件内容被改过
> - -inum 根据i节点查找
> -	-type 文件类型 -f 文件 -d目录 -l链接
find /etc -name inittab -exec ls -l {}\;
> 在/etc下查找inittab文件并执行ls -l命令(-exec 命令 {}\; 固定格式)。
locate 速度非常快，需要locate命令包，在updatedb中查找
> - tmp中的文件无法查找
> -	-i不区分大小写选项
which 搜索命令所在目录及别名信息，绝对路径

whereis 搜索命令所在目录及帮助文档路径
### 关机重启命令
- shutdown -r重启 now现在或指定时间; -h halt关机; -c 取消前一个关机命令
- runlevel查询系统运行级别inittab文件
- init	0-关机; 1-单用户; 2-不完全单用户，不含NFC服务，网络文件系统; 3-完全多用户; 4-未分配; 5-图形界面; 6-重启
- logout退出登录
### 帮助命令
- man 命令
- 命令 --help简要显示帮助文档
- help 命令，显示shell内置命令
- whatis 
- apropos 配置文件 的帮助
### 网络命令
- write 用户名(ctrl+D保存发送)
- wall给所有在线用户发信 用于广播
- mail 用户名，给用户发邮件
- ping/ifconfig
- traceroute 目标ip网站 追踪节点访问路径
- last 查看最近用户登录信息及重启信息
- lastlog 用户最后一次登录的信息; -u 用户uid 查看该用户
- netstat -t TCP协议; -U upp协议; -l 监听; -r 路由;	-n 显示ip地址和端口号
> 例：netstat -tlun 查看本机监听端口; -an 查看本机所有网络端口;	-rn 查看本机路由表
### 文件系统及分区
- df磁盘信息
- du查看磁盘使用空间
- fsck不用，系统自动运行
- dumpe2fs 显示块大小数量
- 文件手工分区命令
> - fdisk -l 查看个盘
> - fdisk /dev/sdb（新硬盘名称） 进行对新盘分区
> - partprobe 分区后保存时强制执行，强制读分区表
> - 格式化: mkfs -t ext4 目标分区
> - 建立挂载点,自动挂载配置文件：/etc/fstab 重要系统文件, 修改后需立即执行mount -a自动挂载，不报错才可以
> - mount -o remount, rw /目录 重挂载修改权限
### 压缩解压命令
- .gz
    - gzip gunzip
- .tar.gz
    - tar [选项] [打包压缩后的文件名] [目录] 打包目录
    - -c打包; -v显示详细; -f指定文件名;	-z打包时压缩; -x解包
- .zip
    - zip unzip
- .bz2
    - bzip2 大压缩比,与tar配合生成.tar.bz2
    - bunzip2解压
### 特殊符号与多命令
- 输入输出重定向: >覆盖; >>追加
- 管道符|
> 命令1 | 命令2(命令1必须有正确输出)
> 意思：命令1的正确输出作为命令2的操作对象
- 多命令书序执行
> - ;顺序执行
> - &&顺序逻辑与，前序命令正确执行则继续执行后续命令
> - ||顺序逻辑或，前序命令正确执行，后续不再执行，前序命令错误，则执行后续命令
> - 例：命令 && echo yes || echo no, 判断一个命令是否正确执行
- dd 
> if=输入文件; of=输出文件; bs=字节数（一次输入输出多少个字节数）; count=数据块个数
> 例：date; dd ；date 统计执行耗时
- 常见的通配符
> - ?匹配任意一个字符
> - \*匹配0个或任意多个字符
> - []匹配中括号中任意一个字符
> - [-]代表中括号中的一个范围
- Bash中其他特殊字符
> - ‘’单引号中的特殊符号没有特殊含义，只是个符号
> - “”双引号中的特殊符号有特殊意义
> - ``反引号与$(命令)一样，引用系统命令
> - #在shell脚本中代表注释
> - $在调用变量后调用变量的值
> - \转义符，把特殊符号的特殊意义注释掉，让其当做普通字符

## Linux 系统备份与还原
1. 需要备份的数据
	- /root/目录
	- /home/
	- /var/spool/mail
	- /etc/
	- 其他目录--有特殊作用的
2. 安装服务的数据
    -	apache需要备份的数据:配置文件,网页主目录, 日志文件
    -	mysql:源码包安装的mysql:usr/local/mysql/data/; rpm包安装的mysql:var/lib/mysql/
3. 备份策略
	1. 完全备份
	2. 增量备份--只增加备份新增数据，与此前备份一直累计，恢复比较麻烦(增量备份的恢复应层层恢复)
	3. 差异备份--备份与第一次的差异数据，与第一次备份累计，使用比较少
4. 备份与恢复命令
- dump [选项] 备份之后的文件名 源文件或目录
> - -level:0-9
> -	-f制定文件名
> -	备份文件或目录只能用0级别，备份分区可以用增量备份，1-9级别
- restore[模式选项][选项]
> -	-C：比较备份数据与实际数据的变化
> -	-i：进入交互模式，手工选择需要恢复的文件
> -	-t：查看模式，用于查看备份文件中拥有哪些数据
> -	-r：还原模式，用于数据还原
> - -f 指定备份文件的文件名
	
### Linux服务管理
- 分类：
> -	rpm包安装的服务：
> 独立的服务:/etc/init.d启动脚本
> xinetd管理的服务/etc/xinetd.d启动脚本
> -	源码包安装的服务
> /usr/local/下对应的
- chkconfig --list 查看服务自启动状态rpm包安装的服务
- 独立服务的启动
	1. 路径—命令 start/stop/status/restart
	2. service 服务 start/stop/status/restart, 只用于redhat系统
	3. 查询service status -all
- 独立服务的自启动管理
> -	chkconfig [--level运行级别][独立服务名][on/off]
> -	修改/etc/rc.d/rc.local文件---推荐使用此方法
> -	使用ntsysv命令管理自启动
- 基于xinetd的服务，超级守护进程(在现在系统中该服务用的越来越少)
- 启动和自启动是通的，启动一个服务时，会变成自启动
	
### 进程管理
1. ps
    - -aux 使用BSD格式显示所有进程
    - -le 使用linux标准格式显示所有进程
2. top 查看健康状态
3. pstree查看进程树
4. 终止进程命令
	- kill -l 显示可用信号
	- 常用信号-1重启进程，-9强制关闭，-15
	- kill pid 终止对应pid的进程
	- killall [选项][信号]进程名，按进程名关闭进程
	- pkill [信号] -t 终端号，按照终端号踢掉用户
### 工作管理
2. 查看后台的工作
> jobs -l,查看放入后台的命令
3. 将后台暂停的工作恢复到前台执行
> fg %工作号
4. 把后台暂停的工作恢复到后台运行
> bg %工作号，在后台恢复的命令必须用于可在后台执行的命令
#### 系统定时任务
1. crond
2. crontab -e 编辑定时任务；-l删除所有
> 固定格式：* * * * * command-绝对地址

### 系统资源查看命令
1. vmstat简洁显示内存和cpu占用情况
2. dmesg开机时内核启动信息，配合grep命令查看对应的信息
3. free[选项],查看内存使用状态
5. 查看cpu信息，/proc/cpuinfo
6. uname查看系统内核信息版本
7. 判断当前系统的位数：file /bin/ls，借用外部命令
8. 查看当前linux系统发型版本lsb_release -a
9. 列出进程占用的文件lsof -p pid

### 日志管理
#### 日志管理服务：rsyslogd服务
- 常见日志var/log/
> - cron记录了定时记录
> -	cups记录了打印信息的日志
> -	dmesg记录了系统开机时内核自检的信息
> -	btmp记录了错误登录的日志，该文件为二进制文件，需使用lastb命令查看
> -	lastlog记录系统中所有用户最后一次登录时间的日志，直接使用lastlog查看
> -	mailog记录邮件信息
> -	message记录系统重要信息
> -	secure记录验证和授权方面的信息
> -	wtmp通过last命令查看，记录账户登录注销信息，重新启动时间
> -	utmp记录当前登录的用户信息，使用w,who,users等命令查看
- rsyslogd日志服务
> - 日志文件格式
> -	日志产生的时间+产生的主机+产生日志的服务+产生的日志信息
> - 日志配置文件：/etc/rsyslog.conf
> - 日志记录位置
> - 日志轮替：切割和轮换
> - 日志文件的命名规则：配置文件中加入dateext参数，则日志会用日期来作为日志文件的后缀
> - 日志规则的配置文件：/etc/logrotate.conf

grub配置文件
grub中分区名的表示hd(0,1)

### 系统修复模式
1. 单用户模式
    - 进入单用户模式，修改遗忘root密码
    - 修改系统默认运行级别
2. 光盘修复模式
	- 进入安全模式后，开启bash
	- 使用chroot /mnt/sysimage改变成硬盘根目录后进行操作
## 正则表达式
> 匹配符-注意命令匹配符与正则表达式匹配符的区别
1. grep 命令
2. awk 截取符合条件的字符列
> -	awk '条件1{动作1}条件2{ 动作2}条件3{ 动作3}'~ 文件名
> - awk 配合printf
> -	加入BEGIN{}在开始执行之前就进行动作
> -	加入END{}所有动作结束之后执行END动作
3. sed 轻量级流编辑器，用来将数据进行选取、新增、删除、替换的命令
- sed [选项]'[动作]' 文件名
> - -n 把经过命令处理的行输出到屏幕
> - -e允许对输入数据进行多条sed命令编辑
> - -i用sed的修改结果直接修改读取数据的文件，而不是由屏幕输出,
> 不用-i选项，对目标文件不会更改
- 动作：a \:追加 ， \当前行连接下一行
> - i \:插入  
> - c \:行替换
> - d :删除
> - p :输出到屏幕
> - s :字符替换''
4. sort排序文件内容命令
5. wc统计文件内容命令
6. cut 命令，提取字符
7. printf 格式化输出
## shell编程
### 标称shell语言(不是注释)：
- #!/bin/bash
### 判断语句（其他-b -c -L -p -s -S)
- -d 判断文件是否存在，并且判断是否为目录
- -e 判断文件是否存在
- -f 判断文件是否存在，并且是否未普通文件
1. test 命令
	- test -e 文件名或
    - [ -e 文件名 ] 注意两边空格
2. 判断文件权限--首先判断是否存在，再判断文件类型或权限，注意：有一个有权限就为真
3. 判断两个文件之间的关系
    - 文件1 -nt 文件2 判断文件1的修改时间是否比文件2新，
    - 文件1 -ot 文件2 判断文件1的修改时间是否比文件2旧
    - 文件1 -ef 文件2 判断文件1和文件2的inode号是否一致，即判断这两文文件是否为同一个文件，或者存在硬链接
4. 两个整数之间比较-eq-ne-gt-lt-ge-le
5. 字符串之间的判断---判断变量里是否有值
    - -z 字符串， 判断字符串是否为空
    - -n 字符串，判断字符串是否为非空
    - 字串1 == 字串2，判断变量的值是否相等
    - 字串1 != 字串2
6. 多重条件判断
    - 判断1 -a 判断2 逻辑与
    - 判断1 -o 判断2 逻辑或
    - !判断1 逻辑非
### 分支语句
- if语句：中括号前后空格，与test一致，其实就是test语句
1. 单分支
~~~
if [ 条件判断式 ]; then
	程序
fi

if [ 条件判断式 ]
	then
		程序
fi
~~~
2. 多分支
~~~
if [ 条件 1 ]
	then
		命令1
	else
		命令2
fi
多分支2
if 
	then

elif
		
	then
	exit 数字----定义返回值

elif 
	then

else

fi
~~~
- 多分支if语句的使用：判断分区使用率
- 多分支if语句使用：备份mysql数据库
	- 判断apache服务是否启动
	- port=$(nmap -sT 服务器ip | grep tcp | grep http | awk '{print $2}')
- 配合定时执行命令，定期备份或检测
### case语句
用于打印输出列表
~~~
case $变量名 in
	"值1"
		命令
		;;
	"值2"
		命令
		;;
esac
~~~
### 循环语句
1. for循环
- 语法1：不知道循环次数
~~~
for 变量 in 值1 值2 值3 ...
	do
		程序
	done
~~~
- 例：
~~~
#!/bin/bash
cd /lamp
ls *.tar.gz>ls.log
for i in $(cat ls.log)
	do
		tar -zxf $i &>/dev/null
	done
rm -rf /lamp/ls.log
~~~
- 语法2：知道循环次数
~~~
for((初始值;循环控制条件;变量变化))
	do
		程序
	done
~~~
- 例：
~~~
#!/bin/bash
s=0
for((i=1;i<=100;i=i+1))
	do
		s=$(($s+$i))
	done
echo "The sum of 1+2+3+...+100 is $s."
~~~

2. wihle循环与until循环
- 语法：条件成立，进入循环
~~~
while [ 条件判断式 ]
	do
		程序
	done
~~~
- until循环语法,与while循环正相反，条件不成立则进循环
~~~
until [ 条件判断式 ]
	do
		程序
	done
~~~


